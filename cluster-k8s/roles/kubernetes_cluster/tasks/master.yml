---
- name: 1. Initialize Cluster
  ansible.builtin.shell: |
    set -o pipefail
    sudo kubeadm init --control-plane-endpoint={{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }} --pod-network-cidr=10.244.0.0/16
  register: init_cluster_output
  changed_when: init_cluster_output.rc != 0
  args:
    executable: /bin/bash

- name: 2.1 Create .kube Directory
  ansible.builtin.file:
    path: .kube
    state: directory
    mode: '0755'
  tags:
    - kube_admin_config

- name: 2.2 Copy Kubernetes Admin Config
  ansible.builtin.copy:
    remote_src: true
    src: /etc/kubernetes/admin.conf
    dest: .kube/config
    mode: '0755'
  tags:
    - kube_admin_config

- name: 2.3 Change Config File Permission
  ansible.builtin.command: chown {{ ansible_env.USER }}:{{ ansible_env.USER }} ".kube/config"
  changed_when: false
  when: not ansible_env.HOME is undefined
  tags:
    - kube_admin_config

- name: 3. Install An Overlay Network
  ansible.builtin.shell: |
    set -o pipefail
    kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  register: init_cluster_output
  become: false
  changed_when: init_cluster_output.rc != 0
  args:
    executable: /bin/bash

- name: 4.1 Execute Join String Generation Command
  ansible.builtin.command: kubeadm token create --print-join-command
  become: false
  register: join_output
  changed_when: false
  tags:
    - join_string

- name: 4.2 Display Join String
  ansible.builtin.debug:
    msg: 'Join Command : {{ join_output.stdout }}'
  tags:
    - join_string

- name: Copy Connection String To A Remote File
  ansible.builtin.template:
    src: k8s_worker_node_connection.j2 # Ansible trouvera ce template dans roles/kubernetes_cluster/templates/
    dest: worker_conn_string
    mode: '0755'

- name: Check Connection String File Exists
  ansible.builtin.stat:
    path: worker_conn_string
  register: conn_file_path_remote

- name: Fetch The Remote File
  ansible.builtin.fetch:
    src: worker_conn_string
    dest: Remote_Files/worker_conn_string
    flat: true
  when: conn_file_path_remote.stat.exists